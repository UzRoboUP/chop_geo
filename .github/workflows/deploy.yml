name: CI/CD Django Clinic Service

on:
  push:
    branches:
      - main   

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install deps
        run: pip install -r requirements.production.txt
      - name: Run tests
        run: pytest

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Django
        run: |
          docker build -f compose/production/django/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/clinic_django:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/clinic_django:latest
      - name: Build and push Celery Worker
        run: |
          docker build -f compose/production/django/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/clinic_celeryworker:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/clinic_celeryworker:latest
      - name: Build and push Celery Beat
        run: |
          docker build -f compose/production/django/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/clinic_celerybeat:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/clinic_celerybeat:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH to Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /projects/klinka/clinic-service 
            docker-compose -f docker-compose.production.yml pull
            docker-compose -f docker-compose.production.yml up -d --remove-orphans
            docker-compose -f docker-compose.production.yml exec -T django python manage.py migrate --noinput
            docker-compose -f docker-compose.production.yml exec -T django python manage.py collectstatic --noinput

